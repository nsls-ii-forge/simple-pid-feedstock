From 3d8e88ad19b24cc8c15ab2e7af1687200fc44a18 Mon Sep 17 00:00:00 2001
From: Maksim Rakitin <mrakitin@bnl.gov>
Date: Thu, 25 Feb 2021 15:45:21 -0500
Subject: [PATCH] missing-files

---
 CHANGELOG.md                           |  89 +++++++++++++++++
 LICENSE.md                             |  21 ++++
 MANIFEST.in                            |  12 +++
 docs/Makefile                          |  20 ++++
 docs/requirements.txt                  |   2 +
 docs/source/conf.py                    | 171 +++++++++++++++++++++++++++++++++
 docs/source/index.rst                  |  21 ++++
 docs/source/simple_pid.rst             |  11 +++
 examples/water_boiler/README.md        |  42 ++++++++
 examples/water_boiler/requirements.txt |   8 ++
 examples/water_boiler/water_boiler.py  |  61 ++++++++++++
 setup.py                               |   5 +-
 simple_pid.egg-info/SOURCES.txt        |  13 +++
 simple_pid/PID.pyi                     |  41 ++++++++
 simple_pid/py.typed                    |   0
 15 files changed, 514 insertions(+), 3 deletions(-)
 create mode 100644 CHANGELOG.md
 create mode 100644 LICENSE.md
 create mode 100644 MANIFEST.in
 create mode 100644 docs/Makefile
 create mode 100644 docs/requirements.txt
 create mode 100644 docs/source/conf.py
 create mode 100644 docs/source/index.rst
 create mode 100644 docs/source/simple_pid.rst
 create mode 100644 examples/water_boiler/README.md
 create mode 100644 examples/water_boiler/requirements.txt
 create mode 100755 examples/water_boiler/water_boiler.py
 create mode 100644 simple_pid/PID.pyi
 create mode 100644 simple_pid/py.typed

diff --git a/CHANGELOG.md b/CHANGELOG.md
new file mode 100644
index 0000000..b7c0537
--- /dev/null
+++ b/CHANGELOG.md
@@ -0,0 +1,89 @@
+# Changelog
+
+All notable changes to this project will be documented in this file.
+
+The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
+and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
+
+## Unreleased
+
+### Added
+
+- Function to map the erro value, now is possibly to clip the error value, i.e., [-pi, pi[
+
+- Typing information through a stub file so that users of the library can use e.g.
+  [mypy](https://github.com/python/mypy) to type check their code
+
+- This project now uses the [Black code style](https://github.com/psf/black)
+
+- The PID class now has a \_\_repr\_\_() method, meaning that objects of this type can be printed
+  directly for use during development
+
+### Fixed
+
+- Formatting errors in the documentation due to poorly formatted docstrings
+
+## [0.2.4] - 2019-10-08
+
+### Added
+
+- Added optional argument to manually set dt (useful e.g. when running in a simulation)
+
+## [0.2.3] - 2019-08-26
+
+### Added
+
+- A reset method to reset the internal state of the PID controller
+
+## [0.2.2] - 2019-07-04
+
+### Changed
+
+- Don't limit the proportional term to the output bounds when using `proportional_on_measurement`
+
+## [0.2.1] - 2019-03-01
+
+### Fixed
+
+- `ZeroDivisionError` on systems with limited precision time.
+
+## [0.2.0] - 2019-02-26
+
+### Added
+
+- Allow the proportional term to be monitored properly through the components-property when
+  _proportional on measurement_ is enabled.
+
+### Fixed
+
+- Bump in output when re-enabling _auto mode_ after running in _manual mode_.
+
+## [0.1.5] - 2019-01-31
+
+### Added
+
+- The ability to see the contributions of the separate terms in the PID
+
+### Fixed
+
+- D term not being divided by delta time, leading to wrong output values
+
+## [0.1.4] - 2018-10-03
+
+### Fixed
+
+- Use monotonic time to prevent errors that may be difficult to diagnose when the system time is
+  modified. Thanks [@deniz195](https://github.com/m-lundberg/simple-pid/issues/1)
+
+### Added
+
+- Initial implementation
+
+[Unreleased]: https://github.com/m-lundberg/simple-pid/compare/v0.2.4...HEAD
+[0.2.4]: https://github.com/m-lundberg/simple-pid/compare/v0.2.3...v0.2.4
+[0.2.3]: https://github.com/m-lundberg/simple-pid/compare/v0.2.2...v0.2.3
+[0.2.2]: https://github.com/m-lundberg/simple-pid/compare/v0.2.1...v0.2.2
+[0.2.1]: https://github.com/m-lundberg/simple-pid/compare/v0.2.0...v0.2.1
+[0.2.0]: https://github.com/m-lundberg/simple-pid/compare/v0.1.5...v0.2.0
+[0.1.5]: https://github.com/m-lundberg/simple-pid/compare/v0.1.4...v0.1.5
+[0.1.4]: https://github.com/m-lundberg/simple-pid/releases/tag/v0.1.4
diff --git a/LICENSE.md b/LICENSE.md
new file mode 100644
index 0000000..372db95
--- /dev/null
+++ b/LICENSE.md
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2018 Martin Lundberg
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/MANIFEST.in b/MANIFEST.in
new file mode 100644
index 0000000..71c85c4
--- /dev/null
+++ b/MANIFEST.in
@@ -0,0 +1,12 @@
+include CHANGELOG.md
+include LICENSE.md
+include README.md
+
+recursive-exclude * __pycache__
+recursive-exclude * *.py[co]
+
+recursive-include docs *.rst conf.py Makefile requirements.txt
+recursive-include examples *.md *.txt *.py
+
+include simple_pid/*.pyi
+include simple_pid/py.typed
diff --git a/docs/Makefile b/docs/Makefile
new file mode 100644
index 0000000..54b7724
--- /dev/null
+++ b/docs/Makefile
@@ -0,0 +1,20 @@
+# Minimal makefile for Sphinx documentation
+#
+
+# You can set these variables from the command line.
+SPHINXOPTS    =
+SPHINXBUILD   = sphinx-build
+SPHINXPROJ    = simple-pid
+SOURCEDIR     = source
+BUILDDIR      = build
+
+# Put it first so that "make" without argument is like "make help".
+help:
+	@$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
+
+.PHONY: help Makefile
+
+# Catch-all target: route all unknown targets to Sphinx using the new
+# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
+%: Makefile
+	@$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
\ No newline at end of file
diff --git a/docs/requirements.txt b/docs/requirements.txt
new file mode 100644
index 0000000..13dcbb6
--- /dev/null
+++ b/docs/requirements.txt
@@ -0,0 +1,2 @@
+m2r
+sphinx-rtd-theme
diff --git a/docs/source/conf.py b/docs/source/conf.py
new file mode 100644
index 0000000..dc0ebaa
--- /dev/null
+++ b/docs/source/conf.py
@@ -0,0 +1,171 @@
+# -*- coding: utf-8 -*-
+#
+# Configuration file for the Sphinx documentation builder.
+#
+# This file does only contain a selection of the most common options. For a
+# full list see the documentation:
+# http://www.sphinx-doc.org/en/master/config
+
+# -- Path setup --------------------------------------------------------------
+
+# If extensions (or modules to document with autodoc) are in another directory,
+# add these directories to sys.path here. If the directory is relative to the
+# documentation root, use os.path.abspath to make it absolute, like shown here.
+#
+import os
+import sys
+sys.path.insert(0, os.path.abspath('../../'))
+
+
+# -- Project information -----------------------------------------------------
+
+project = 'simple-pid'
+copyright = '2018, Martin Lundberg'
+author = 'Martin Lundberg'
+
+# The short X.Y version
+version = ''
+# The full version, including alpha/beta/rc tags
+release = '0.1'
+
+
+# -- General configuration ---------------------------------------------------
+
+# If your documentation needs a minimal Sphinx version, state it here.
+#
+# needs_sphinx = '1.0'
+
+# Add any Sphinx extension module names here, as strings. They can be
+# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
+# ones.
+extensions = [
+    'sphinx.ext.autodoc',
+    'sphinx.ext.viewcode',
+    'm2r',
+]
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates']
+
+# The suffix(es) of source filenames.
+# You can specify multiple suffix as a list of string:
+#
+# source_suffix = ['.rst', '.md']
+source_suffix = ['.rst', '.md']
+
+# The master toctree document.
+master_doc = 'index'
+
+# The language for content autogenerated by Sphinx. Refer to documentation
+# for a list of supported languages.
+#
+# This is also used if you do content translation via gettext catalogs.
+# Usually you set "language" from the command line for these cases.
+language = None
+
+# List of patterns, relative to source directory, that match files and
+# directories to ignore when looking for source files.
+# This pattern also affects html_static_path and html_extra_path .
+exclude_patterns = []
+
+# The name of the Pygments (syntax highlighting) style to use.
+pygments_style = 'sphinx'
+
+
+# -- Options for HTML output -------------------------------------------------
+
+# The theme to use for HTML and HTML Help pages.  See the documentation for
+# a list of builtin themes.
+#
+html_theme = 'sphinx_rtd_theme'
+
+# Theme options are theme-specific and customize the look and feel of a theme
+# further.  For a list of options available for each theme, see the
+# documentation.
+#
+# html_theme_options = {}
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named "default.css" will overwrite the builtin "default.css".
+html_static_path = ['_static']
+
+# Custom sidebar templates, must be a dictionary that maps document names
+# to template names.
+#
+# The default sidebars (for documents that don't match any pattern) are
+# defined by theme itself.  Builtin themes are using these templates by
+# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
+# 'searchbox.html']``.
+#
+# html_sidebars = {}
+
+
+# -- Options for HTMLHelp output ---------------------------------------------
+
+# Output file base name for HTML help builder.
+htmlhelp_basename = 'simple-piddoc'
+
+
+# -- Options for LaTeX output ------------------------------------------------
+
+latex_elements = {
+    # The paper size ('letterpaper' or 'a4paper').
+    #
+    # 'papersize': 'letterpaper',
+
+    # The font size ('10pt', '11pt' or '12pt').
+    #
+    # 'pointsize': '10pt',
+
+    # Additional stuff for the LaTeX preamble.
+    #
+    # 'preamble': '',
+
+    # Latex figure (float) alignment
+    #
+    # 'figure_align': 'htbp',
+}
+
+# Grouping the document tree into LaTeX files. List of tuples
+# (source start file, target name, title,
+#  author, documentclass [howto, manual, or own class]).
+latex_documents = [
+    (master_doc, 'simple-pid.tex', 'simple-pid Documentation',
+     'Martin Lundberg', 'manual'),
+]
+
+
+# -- Options for manual page output ------------------------------------------
+
+# One entry per manual page. List of tuples
+# (source start file, name, description, authors, manual section).
+man_pages = [
+    (master_doc, 'simple-pid', 'simple-pid Documentation',
+     [author], 1)
+]
+
+
+# -- Options for Texinfo output ----------------------------------------------
+
+# Grouping the document tree into Texinfo files. List of tuples
+# (source start file, target name, title, author,
+#  dir menu entry, description, category)
+texinfo_documents = [
+    (master_doc, 'simple-pid', 'simple-pid Documentation',
+     author, 'simple-pid', 'One line description of project.',
+     'Miscellaneous'),
+]
+
+
+# -- Extension configuration -------------------------------------------------
+
+
+def autodoc_skip_member(app, what, name, obj, skip, options):
+    # include __init__ and __call__ in docs
+    if name in ('__init__', '__call__'):
+        return False
+    return skip
+
+def setup(app):
+    app.connect('autodoc-skip-member', autodoc_skip_member)
diff --git a/docs/source/index.rst b/docs/source/index.rst
new file mode 100644
index 0000000..324829f
--- /dev/null
+++ b/docs/source/index.rst
@@ -0,0 +1,21 @@
+.. simple-pid documentation master file, created by
+   sphinx-quickstart on Fri May 11 11:02:43 2018.
+   You can adapt this file completely to your liking, but it should at least
+   contain the root `toctree` directive.
+
+Welcome to simple-pid's documentation!
+======================================
+
+.. mdinclude:: ../../README.md
+
+.. toctree::
+   :maxdepth: 2
+   :caption: Contents:
+
+
+Indices and tables
+==================
+
+* :ref:`genindex`
+* :ref:`modindex`
+* :ref:`search`
diff --git a/docs/source/simple_pid.rst b/docs/source/simple_pid.rst
new file mode 100644
index 0000000..2c2f62f
--- /dev/null
+++ b/docs/source/simple_pid.rst
@@ -0,0 +1,11 @@
+simple\_pid package
+===================
+
+simple\_pid.PID module
+----------------------
+
+.. automodule:: simple_pid.PID
+    :members:
+    :undoc-members:
+    :show-inheritance:
+
diff --git a/examples/water_boiler/README.md b/examples/water_boiler/README.md
new file mode 100644
index 0000000..70d06ca
--- /dev/null
+++ b/examples/water_boiler/README.md
@@ -0,0 +1,42 @@
+# Water Boiler Example
+
+Simple simulation of a water boiler which can heat up water and where the heat dissipates slowly over time. Running the example will run the water boiler simulation for 10 seconds and use the PID controller to make the boiler reach a setpoint temperature. The results will also be plotted using [Matplotlib](https://matplotlib.org).
+
+## Installation
+
+Optionally, create a virtual environment for this example and activate it.
+
+```bash
+python -m venv water_boiler_venv  # assuming Python 3
+. water_boiler_venv/bin/activate
+```
+
+Then install the example dependencies:
+
+```bash
+pip install -r requirements.txt
+```
+
+## Usage
+
+```bash
+# activate the virtual environment if you use one:
+. water_boiler_venv/bin/activate
+
+# run the example:
+python water_boiler.py
+
+# once you're done deactivate the virtual environment if you use one:
+deactivate
+```
+
+## Troubleshooting
+
+### Ubuntu
+
+Depending on your environment, you might have to [install a some system dependencies for Matplotlib](https://stackoverflow.com/a/56673945/3767264) to display the graph.
+
+Typically, the sign of that is usually one the following errors:
+
+- `UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.`
+- `AttributeError: module 'cairo' has no attribute 'version_info'` (if the system dependencies are already available but not the corresponding Python dependencies)
diff --git a/examples/water_boiler/requirements.txt b/examples/water_boiler/requirements.txt
new file mode 100644
index 0000000..90c9201
--- /dev/null
+++ b/examples/water_boiler/requirements.txt
@@ -0,0 +1,8 @@
+cycler==0.10.0
+kiwisolver==1.1.0
+matplotlib==3.1.0
+numpy==1.16.4
+pyparsing==2.4.0
+python-dateutil==2.8.0
+simple-pid==0.2.1
+six==1.12.0
diff --git a/examples/water_boiler/water_boiler.py b/examples/water_boiler/water_boiler.py
new file mode 100755
index 0000000..d2c97d8
--- /dev/null
+++ b/examples/water_boiler/water_boiler.py
@@ -0,0 +1,61 @@
+#!/usr/bin/env python
+
+import time
+import matplotlib.pyplot as plt
+from simple_pid import PID
+
+
+class WaterBoiler:
+    """
+    Simple simulation of a water boiler which can heat up water
+    and where the heat dissipates slowly over time
+    """
+
+    def __init__(self):
+        self.water_temp = 20
+
+    def update(self, boiler_power, dt):
+        if boiler_power > 0:
+            # boiler can only produce heat, not cold
+            self.water_temp += 1 * boiler_power * dt
+
+        # some heat dissipation
+        self.water_temp -= 0.02 * dt
+        return self.water_temp
+
+
+if __name__ == '__main__':
+    boiler = WaterBoiler()
+    water_temp = boiler.water_temp
+
+    pid = PID(5, 0.01, 0.1, setpoint=water_temp)
+    pid.output_limits = (0, 100)
+
+    start_time = time.time()
+    last_time = start_time
+
+    # keep track of values for plotting
+    setpoint, y, x = [], [], []
+
+    while time.time() - start_time < 10:
+        current_time = time.time()
+        dt = current_time - last_time
+
+        power = pid(water_temp)
+        water_temp = boiler.update(power, dt)
+
+        x += [current_time - start_time]
+        y += [water_temp]
+        setpoint += [pid.setpoint]
+
+        if current_time - start_time > 1:
+            pid.setpoint = 100
+
+        last_time = current_time
+
+    plt.plot(x, y, label='measured')
+    plt.plot(x, setpoint, label='target')
+    plt.xlabel('time')
+    plt.ylabel('temperature')
+    plt.legend()
+    plt.show()
diff --git a/setup.py b/setup.py
index 096474a..46cc3f2 100644
--- a/setup.py
+++ b/setup.py
@@ -1,5 +1,4 @@
-
-from setuptools import setup
+from setuptools import setup, find_packages
 
 from codecs import open
 from os import path
@@ -26,7 +25,7 @@ setup(
         'Programming Language :: Python :: 3',
     ],
     keywords='pid controller control',
-    packages=['simple_pid'],
+    packages=find_packages(),
     package_data={
         'simple_pid': ['*.pyi', 'py.typed'],
     },
diff --git a/simple_pid.egg-info/SOURCES.txt b/simple_pid.egg-info/SOURCES.txt
index 86ba193..c9a200d 100644
--- a/simple_pid.egg-info/SOURCES.txt
+++ b/simple_pid.egg-info/SOURCES.txt
@@ -1,8 +1,21 @@
+CHANGELOG.md
+LICENSE.md
+MANIFEST.in
 README.md
 setup.cfg
 setup.py
+docs/Makefile
+docs/requirements.txt
+docs/source/conf.py
+docs/source/index.rst
+docs/source/simple_pid.rst
+examples/water_boiler/README.md
+examples/water_boiler/requirements.txt
+examples/water_boiler/water_boiler.py
 simple_pid/PID.py
+simple_pid/PID.pyi
 simple_pid/__init__.py
+simple_pid/py.typed
 simple_pid.egg-info/PKG-INFO
 simple_pid.egg-info/SOURCES.txt
 simple_pid.egg-info/dependency_links.txt
diff --git a/simple_pid/PID.pyi b/simple_pid/PID.pyi
new file mode 100644
index 0000000..c0c1a03
--- /dev/null
+++ b/simple_pid/PID.pyi
@@ -0,0 +1,41 @@
+from typing import Callable, Optional, Tuple
+
+_Limits = Tuple[Optional[float], Optional[float]]
+_Components = Tuple[float, float, float]
+_Tunings = Tuple[float, float, float]
+
+def _clamp(value: Optional[float], limits: _Limits) -> Optional[float]: ...
+
+_current_time: Callable[[], float]
+
+class PID(object):
+    def __init__(
+        self,
+        Kp: float = ...,
+        Ki: float = ...,
+        Kd: float = ...,
+        setpoint: float = ...,
+        sample_time: Optional[float] = ...,
+        output_limits: _Limits = ...,
+        auto_mode: bool = ...,
+        proportional_on_measurement: bool = ...,
+        error_map: Optional[Callable[[float], float]] = ...,
+    ) -> None: ...
+    def __call__(self, input_: float, dt: Optional[float] = ...) -> Optional[float]: ...
+    def __repr__(self) -> str: ...
+    @property
+    def components(self) -> _Components: ...
+    @property
+    def tunings(self) -> _Tunings: ...
+    @tunings.setter
+    def tunings(self, tunings: _Tunings) -> None: ...
+    @property
+    def auto_mode(self) -> bool: ...
+    @auto_mode.setter
+    def auto_mode(self, enabled: bool) -> None: ...
+    def set_auto_mode(self, enabled: bool, last_output: Optional[float] = ...) -> None: ...
+    @property
+    def output_limits(self) -> _Limits: ...
+    @output_limits.setter
+    def output_limits(self, limits: _Limits) -> None: ...
+    def reset(self) -> None: ...
diff --git a/simple_pid/py.typed b/simple_pid/py.typed
new file mode 100644
index 0000000..e69de29
-- 
2.16.1

